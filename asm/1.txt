section .text
	global _start
_start:

	mov eax, 4
	mov ebx, 1
	mov ecx, msg1
	mov edx, len1
	int 0x80

	mov eax, 3
	mov ebx, 0
	mov ecx, num
	mov edx, 1
	int 0x80

	mov eax, [num]
	sub eax, '0'
	inc eax
	add eax, '0'
	mov [res], eax

	mov eax, 4
	mov ebx, 1
	mov ecx, msg2
	mov edx, len2
	int 0x80

	mov eax, 4
	mov ebx, 1
	mov ecx, res
	mov edx, 1
	int 0x80

	mov eax, 4
	mov ebx, 1
	mov ecx, prv
	mov edx, 1
	int 0x80

	mov eax, 1
	int 0x80

section .data
	msg1 db "Enter the number:", 0xA
	len1 equ $ - msg1

	msg2 db "The next number is:", 0xA
	len2 equ $ - msg2
	
	prv db 0xA

segment .bss
	num resb 1
	res resb 1