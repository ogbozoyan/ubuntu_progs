section .text
	global _start
_start:

	mov eax, 4
	mov ebx, 1
	mov ecx, msg1
	mov edx, len1
	int 0x80

	mov eax, 3
	mov ebx, 0
	mov ecx, num
	mov edx, 1
	int 0x80

	mov al, [num]
	sub al, '0'
	add al, al

	cmp al, 10
        jge  more10

less10:

        add al, '0'
        mov [num], al

 	mov eax, 4
        mov ebx, 1
        mov ecx, num
        mov edx, 1
        int 0x80

        mov eax, 4
        mov ebx, 1
        mov ecx, prv
        mov edx, 1
        int 0x80

        jmp exit

more10:

        mov ah, 0x31
        mov [res], ah

        add al, '0'
        sub al, 10
        mov [res+1], al

 	mov eax, 4
        mov ebx, 1
        mov ecx, res
        mov edx, 2
        int 0x80

        mov eax, 4
        mov ebx, 1
        mov ecx, prv
        mov edx, 1
        int 0x80
exit:
	
	mov eax, 1
	int 0x80

section .data
	msg db "The result is:", 0xA
	len equ $ - msg

	msg1 db "Enter the number:", 0xA
        len1 equ $ - msg1

	prv db 0xA

segment .bss
	res resb 2
	num resb 1