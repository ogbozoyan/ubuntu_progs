section .text
        global _start
_start:

        mov eax, 4
        mov ebx, 1
        mov ecx, msg1
        mov edx, len1
        int 0x80

        mov eax, 3
        mov ebx, 0
        mov ecx, num
        mov edx, 2
        int 0x80

	mov eax, [num]
        sub eax, '0'
        mov ebx, '3'
        sub ebx, '0'
        div ebx
        add eax, '0'
        mov [res], eax

        mov eax, 4
        mov ebx, 1
        mov ecx, msg
        mov edx, len
        int 0x80

        mov eax, 4
        mov ebx, 1
        mov ecx, res
        mov edx, 1
        int 0x80

	mov eax, 4
	mov ebx, 1
	mov ecx, prv
	mov edx, 1
	int 0x80

        mov eax, 1
        int 0x80

section .data
        msg db "The result is:", 0xA
        len equ $ - msg

        msg1 db "Enter the number:", 0xA
        len1 equ $ - msg1

	prv db 0xA

segment .bss
        res resb 1
        num resb 2